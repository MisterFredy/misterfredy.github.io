{"version":3,"sources":["Utility/PokemonContext.js","Pages/DetailPokemon.js","Pages/ListPokemon.js","Pages/MyPokemonList.js","App.js","index.js"],"names":["PokemonContext","createContext","DetailPokemon","props","React","useContext","MyPokemon","setMyPokemon","useState","data","setData","visible","setVisible","loadingData","setLoadingData","ModalName","setModalName","namePokemon","setNamePokemon","useEffect","pokemonDetail","dialogID","fetchGraphQL","query","variables","operationName","a","Axios","post","then","res","pokemon_v2_pokemon","catch","error","id","Movespokemon","moves","pokemon_v2_pokemonmoves","map","value","pokemon_v2_move","level","name","Typepokemon","type","pokemon_v2_pokemontypes","type_id","pokemon_v2_type","title","centered","closable","footer","onClick","icon","CheckSquareOutlined","some","values","pokemonName","message","content","className","style","marginTop","idPokemon","pokemonType","success","QqOutlined","Math","random","setDialogOpen","width","spinning","tip","src","align","undefined","onChange","event","target","span","ListPokemon","dialogOpen","setdialogID","fetchPokemon_details","orientation","size","itemLayout","bordered","dataSource","renderItem","item","Item","Meta","avatar","pokemon_species_id","MyPokemonList","Card","Loaddata","pokemons","sm","hoverable","cover","description","gutter","Header","Layout","Sider","Content","App","collapsed","setCollapsed","useMemo","minHeight","breakpoint","collapsedWidth","trigger","collapsible","theme","mode","defaultSelectedKeys","AliwangwangOutlined","to","UserOutlined","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","Provider","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.b97dd0fb.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const PokemonContext = createContext(null);","// eslint-disable-next-line\r\nimport React, { useState } from 'react';\r\nimport { Modal, Button, Row, Col, Divider,message,Form,Spin  } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport Axios from \"axios\";\r\nimport { CheckSquareOutlined,QqOutlined } from '@ant-design/icons';\r\nimport { Field, Label, Input } from '@zendeskgarden/react-forms';\r\nimport { PokemonContext } from \"../Utility/PokemonContext\";\r\n\r\nexport default function DetailPokemon(props){\r\n    const { MyPokemon, setMyPokemon } = React.useContext(PokemonContext);\r\n    let [data,setData] = React.useState();\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [loadingData, setLoadingData] = React.useState(false);\r\n    const [ModalName,setModalName] = React.useState(false);\r\n    const [namePokemon,setNamePokemon] = React.useState(\"\");\r\n    \r\n   \r\n\r\n    React.useEffect(() => {\r\n    //console.log(\"masuk detail\");\r\n    pokemonDetail(props.dialogID);\r\n    setVisible(true);\r\n    },[props]);\r\n\r\n\r\nconst fetchGraphQL = async(query, variables, operationName) => {\r\n     setLoadingData(true)\r\n     Axios.post(\"https://beta.pokeapi.co/graphql/v1beta\",{query})\r\n     .then(res => {\r\n         setData(res.data.data.pokemon_v2_pokemon[0])\r\n         setVisible(true);\r\n         setLoadingData(false)\r\n        }).catch(function(error) {\r\n         //  console.log(error.response.status) // 401\r\n          // console.log(error.response.data.error) //Please Authenticate or whatever returned from server\r\n           setLoadingData(false)\r\n        })\r\n}\r\n\r\nconst pokemonDetail = async(id) => {\r\n  setLoadingData(true)\r\n   const query = `\r\n   query samplePokeAPIquery {\r\n pokemon_v2_pokemon(where: {id: {_eq: `+id+`}}) {\r\n    name\r\n    height\r\n    id\r\n    base_experience\r\n    pokemon_v2_pokemonmoves(limit: 5 , where: {pokemon_id: {_eq: `+id+`}}) {\r\n      level\r\n      pokemon_v2_move {\r\n        name\r\n      }\r\n    }\r\n    pokemon_v2_pokemontypes(where: {pokemon_id: {_eq: `+id+`}}) {\r\n      slot\r\n      type_id\r\n      pokemon_v2_type {\r\n        name\r\n      }\r\n    }\r\n  }\r\n  }\r\n  `\r\n  \r\n\r\n  return fetchGraphQL(\r\n    query,\r\n    {},\r\n    \"pokemon_v2_pokemon\"\r\n  )\r\n}\r\n\r\nconst handleClosed = () => {\r\nsetVisible(false); \r\nsetData();  \r\nprops.setDialogOpen(false);\r\n}\r\n    \r\nconst Movespokemon = () => {\r\n    if(data){\r\n   const moves = data.pokemon_v2_pokemonmoves.map((value) => (\r\n            <>\r\n              <p>\r\n                {value.pokemon_v2_move.level}\r\n              </p>\r\n              <p>\r\n                {value.pokemon_v2_move.name}\r\n              </p> \r\n            </>\r\n          ));\r\n          return (\r\n    <div>\r\n        {moves}\r\n    </div>\r\n  );\r\n    }\r\n  return(null)\r\n}\r\n\r\n\r\nconst Typepokemon = () => {\r\n  if(data){\r\n     const type = data.pokemon_v2_pokemontypes.map((value) => (\r\n              <p id={value.type_id}>\r\n                {value.pokemon_v2_type.name}\r\n              </p>\r\n          ));\r\n          return (\r\n    <>\r\n        {type}\r\n    </>\r\n  );\r\n  }\r\n  return(null)\r\n}\r\n\r\n\r\nconst handleCatch = () => {\r\n  if(Math.random() > 0.5){\r\n    setModalName(true);\r\n    message.success({\r\n    content: 'Yo catch pokemon',\r\n    className: 'custom-class',\r\n    style: {\r\n      marginTop: '20vh',\r\n    },\r\n  });\r\n  \r\n  }else{\r\n      message.error({\r\n    content: 'Failed catch pokemon please try again',\r\n    className: 'custom-class',\r\n    style: {\r\n      marginTop: '20vh',\r\n    },\r\n  });\r\n  }\r\n}\r\n\r\nconst handleSubmit = () => {\r\n//console.log(namePokemon)\r\nif(MyPokemon.some(values => namePokemon === values.pokemonName)){\r\n  message.error({\r\n    content: \"your name already taken\",\r\n    className: 'custom-class',\r\n    style: {\r\n      marginTop: '20vh',\r\n    },\r\n  });\r\n}else{\r\nsetMyPokemon([...MyPokemon, {pokemonName: namePokemon, idPokemon:props.dialogID, pokemonType: data.name} ])\r\nmessage.success({\r\n    content: namePokemon+' has been added to My Pokemon',\r\n    className: 'custom-class',\r\n    style: {\r\n      marginTop: '20vh',\r\n    },\r\n  });\r\nsetNamePokemon(\"\"); \r\nsetModalName(false)\r\n}\r\n\r\n}\r\n\r\nconst handleBack = () =>{setNamePokemon(\"\"); setModalName(false)}\r\n\r\n    return (\r\n    <>\r\n   \r\n      <Modal\r\n        title={\"pokemon detail\"}\r\n        centered\r\n        closable={false}\r\n        visible={visible}\r\n         footer={ModalName ? [\r\n              <Button key=\"back\" onClick={handleBack}>\r\n              back\r\n            </Button>,\r\n             <Button icon={<CheckSquareOutlined />} onClick={handleSubmit}>Submit</Button>,] : [\r\n            <Button icon={<QqOutlined />} onClick={handleCatch}>Catch</Button>,\r\n            <Button key=\"back\" onClick={handleClosed}>\r\n              Closed\r\n            </Button>,\r\n          ]}\r\n        width={512}\r\n      > \r\n       <Spin spinning={loadingData} tip=\"Loading...\">  \r\n       <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + props.dialogID+ \".png\"} className=\"sprite\" />\r\n     <Divider>\r\n        <h1 align={\"center\"}>{data !== undefined ? data.name : null}</h1>\r\n     </Divider> \r\n\r\n     { ModalName ?\r\n     <>\r\n     <h3 align={\"center\"}>your pokemon name</h3>\r\n     <Input value={namePokemon} onChange={event =>\r\n                 setNamePokemon(event.target.value)\r\n                  } /> \r\n                  </>\r\n      :\r\n          <Row>\r\n          <Col span={12}>\r\n            <h2>Type</h2>\r\n            <Typepokemon/>\r\n        </Col>\r\n        <Col span={12}>\r\n            <h2>Moves</h2>\r\n            <Movespokemon/>\r\n        </Col>\r\n        </Row>\r\n      } \r\n       </Spin>\r\n      </Modal>\r\n     \r\n    </>\r\n  );\r\n\r\n\r\n}","// eslint-disable-next-line\r\nimport React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { List, Typography, Divider,Avatar,Spin  } from 'antd';\r\nimport Axios from \"axios\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport DetailPokemon from './DetailPokemon';\r\n\r\nexport default function ListPokemon() {\r\nconst [data,setData] = React.useState([]);\r\nconst [loadingData, setLoadingData] = React.useState(false);\r\nconst [dialogOpen,setDialogOpen] = React.useState(false);\r\nconst [dialogID,setdialogID] = React.useState(0);\r\n\r\n\r\nReact.useEffect(() => {\r\n fetchPokemon_details();\r\n},[]);\r\n\r\nconst fetchGraphQL = async(query, variables, operationName) => {\r\n     setLoadingData(true)\r\n     Axios.post(\"https://beta.pokeapi.co/graphql/v1beta\",{query})\r\n     .then(res => {\r\n         setData(res.data.data.pokemon_v2_pokemon)\r\n         setLoadingData(false)\r\n        }).catch(function(error) {\r\n           setLoadingData(false)\r\n        })\r\n}\r\n\r\nconst fetchPokemon_details = async() => {\r\n   const query = `\r\n query samplePokeAPIquery {\r\n  pokemon_v2_pokemon {\r\n    name\r\n    pokemon_species_id\r\n  }\r\n}\r\n  `\r\n  \r\n\r\n  return fetchGraphQL(\r\n    query,\r\n    {},\r\n    \"pokemon_v2_pokemon\"\r\n  )\r\n}\r\n\r\n  return (\r\n    <>\r\n     { dialogOpen && <DetailPokemon \r\n     dialogOpen={dialogOpen} \r\n     setDialogOpen={setDialogOpen}\r\n     dialogID={dialogID}\r\n     />}\r\n    <Divider orientation=\"left\">List Of Pokemon</Divider>\r\n    <Spin spinning={loadingData} tip=\"Loading...\">  \r\n    <List\r\n      size=\"large\"\r\n      itemLayout=\"horizontal\"\r\n      bordered\r\n      dataSource={data}\r\n      renderItem={item =>\r\n      <List.Item>\r\n        <List.Item.Meta\r\n          avatar={<Avatar src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + item.pokemon_species_id + \".png\"} />}\r\n          title={<a onClick={()=>{setdialogID(item.pokemon_species_id);setDialogOpen(true);}} >{item.name}</a>}\r\n        />\r\n      </List.Item>\r\n       } />\r\n    </Spin>\r\n  </>\r\n\r\n  )\r\n\r\n}","// eslint-disable-next-line\r\nimport React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { PokemonContext } from \"../Utility/PokemonContext\";\r\nimport { Modal, Button, Row, Col, Divider,message,Form,Spin,Card,Meta  } from 'antd';\r\n\r\n\r\nexport default function MyPokemonList(props) {\r\nconst { MyPokemon, setMyPokemon } = React.useContext(PokemonContext);\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nconst Loaddata = () => {\r\n  const pokemons =   MyPokemon.map((value) => (\r\n            <>\r\n            <Col sm={12}>\r\n            <Card\r\n                hoverable\r\n                cover={<img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + value.idPokemon+ \".png\"} className=\"sprite\" />}\r\n            >\r\n                <Meta title={value.pokemonName} description={value.pokemonType} />\r\n            </Card>\r\n            </Col>\r\n            </>\r\n          ));\r\n\r\n     return (\r\n    <>\r\n        {pokemons}\r\n    </>\r\n  );\r\n}\r\n\r\nreturn (\r\n\r\n<>\r\n<Row gutter={[16, 16]}>\r\n  <Loaddata />\r\n</Row>\r\n</>\r\n\r\n);\r\n\r\n}","import React from 'react';\nimport './style/custom.css'\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  AliwangwangOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ListPokemon from './Pages/ListPokemon';\nimport MyPokemonList from './Pages/MyPokemonList';\nimport DetailPokemon from './Pages/DetailPokemon';\nimport { PokemonContext } from \"./Utility/PokemonContext\";\n\n\n\nconst { Header, Sider, Content } = Layout;\n\n\n\n\nexport default function App (props) {\n\n  const  [collapsed,setCollapsed] = React.useState(true);\n  const  [MyPokemon, setMyPokemon] = React.useState([]);\n  const value = React.useMemo(() => ({ MyPokemon, setMyPokemon }), [MyPokemon, setMyPokemon]);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n\n    return (\n       <Router>\n      <Layout  style={{ minHeight: '100vh' }}>\n        <Sider \n            breakpoint=\"md\"\n            collapsedWidth=\"0\"\n            trigger={null} \n            collapsible \n            collapsed={collapsed}>\n\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\" icon={<AliwangwangOutlined />}>\n             <span> List Pokemon</span>\n              <Link to=\"/\" />\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n              <span> My Pokemon List</span>\n              <Link to=\"/mypokemon\" />\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n              className: 'trigger',\n              onClick: toggle,\n              style:{padding: 24,}\n            })}\n          </Header>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              margin: '24px 16px',\n              padding: 24,\n              minHeight: 280,\n            }}\n          >\n          <PokemonContext.Provider value={value}>\n              <Route exact path=\"/\" component={ListPokemon} />\n              <Route path=\"/mypokemon\" component={MyPokemonList} />\n          </ PokemonContext.Provider>\n          </Content>\n        </Layout>\n      </Layout>\n      </Router>\n    );\n  }\n\n","import React from \"react\"\n\nimport { render } from \"react-dom\"\n\nimport { BrowserRouter } from \"react-router-dom\"\nimport 'antd/dist/antd.css';\nimport App from \"./App\"\n\nrender(\n\n  <BrowserRouter>\n\n    <App />\n\n  </BrowserRouter>,\n\n  document.querySelector(\"#root\")\n\n)"],"sourceRoot":""}